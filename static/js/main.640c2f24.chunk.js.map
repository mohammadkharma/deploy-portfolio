{"version":3,"sources":["components/Navbar.jsx","components/Home.jsx","components/About.jsx","components/Projects.jsx","components/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","exact","to","Home","About","Projects","href","Contact","action","data-netlify","type","name","id","placeholder","data-netlifyrecaptcha","value","App","basename","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iRA0BeA,EAvBA,WACb,OACE,yBAAKC,UAAU,UACb,4BACE,4BACE,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,KAAlB,SAIF,4BACE,kBAAC,IAAD,CAASA,GAAG,UAAZ,UAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,aAAZ,aAEF,4BACE,kBAAC,IAAD,CAASA,GAAG,YAAZ,eCNKC,EAXF,WACX,OACE,yBAAKH,UAAU,QACb,+CACA,yBAAKA,UAAU,UACf,wDACA,+ECgCSI,EAtCD,WACZ,OACE,yBAAKJ,UAAU,SACb,yBAAKA,UAAU,gBACb,4CACA,uNAMF,yBAAKA,UAAU,aACb,wCACA,qKAGE,6BAHF,iHAIiD,6BAJjD,4GASF,yBAAKA,UAAU,aACb,yCACA,4DACgC,6BADhC,sFAMF,yBAAKA,UAAU,WACb,uCACA,iFCsBOK,EAtDE,WACf,OACE,yBAAKL,UAAU,YACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,kDACA,6HAMJ,yBAAKA,UAAU,UACb,yBAAKA,UAAU,QACb,iDACA,wGAIA,uBAAGM,KAAK,iEAAR,QAMJ,yBAAKN,UAAU,UACb,yBAAKA,UAAU,QACb,wCACA,wDACA,uBAAGM,KAAK,mDAAR,QAIJ,yBAAKN,UAAU,UACb,yBAAKA,UAAU,QACb,4CACA,0DACA,uBAAGM,KAAK,kDAAR,QAIJ,yBAAKN,UAAU,UACb,yBAAKA,UAAU,QACb,4CACA,8DACA,uBAAGM,KAAK,qCAAR,WCPGC,EAvCC,WACd,OACE,yBAAKP,UAAU,WACb,0BAAMQ,OAAO,OAAOC,eAAa,QAC/B,yBAAKT,UAAU,SACb,2BAAOU,KAAK,OAAOC,KAAK,OAAOC,GAAG,OAAOC,YAAY,UAEvD,yBAAKb,UAAU,SACb,2BAAOU,KAAK,QAAQC,KAAK,QAAQC,GAAG,QAAQC,YAAY,WAE1D,yBAAKb,UAAU,SACb,8BACEW,KAAK,UACLC,GAAG,UACHC,YAAY,aAGhB,yBAAKC,wBAAsB,SAC3B,yBAAKd,UAAU,SACb,2BAAOA,UAAU,SAASU,KAAK,SAASK,MAAM,aAIlD,gCACE,uBACET,KAAK,wDACLN,UAAU,mBAEZ,uBACEM,KAAK,mDACLN,UAAU,eAGZ,4DCZOgB,MAdf,WACE,OACE,yBAAKhB,UAAU,OACb,kBAAC,IAAD,CAAeiB,SAAS,qBACtB,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOhB,OAAK,EAACiB,KAAK,IAAIC,UAAWhB,IACjC,kBAAC,IAAD,CAAOe,KAAK,SAASC,UAAWf,IAChC,kBAAC,IAAD,CAAOc,KAAK,YAAYC,UAAWd,IACnC,kBAAC,IAAD,CAAOa,KAAK,WAAWC,UAAWZ,OCLtBa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.640c2f24.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <ul>\n        <li>\n          <NavLink exact to=\"/\">\n            Home\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/about\">About</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/projects\">Projects</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"/contact\">Contact</NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Home = () => {\n  return (\n    <div className=\"home\">\n      <h1>Mohammad Kharma</h1>\n      <div className=\"image\"></div>\n      <h3>Welcome to my Portfolio!</h3>\n      <p>Take a look around and feel free to contact me</p>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div className=\"about\">\n      <div className=\"introduction\">\n        <h3>Introdutcion</h3>\n        <p>\n          Fast learning Web Developer who is passionate about clean code and\n          solving difficult problems. Always up to date about new Technologies\n          and having an eye for modern and clear designs.\n        </p>\n      </div>\n      <div className=\"education\">\n        <h3>Eduction</h3>\n        <p>\n          I did an intensive course as a full-stack web developer at the DCI -\n          Digital Career Institute - Berlin, with a Further Eduction Degree.\n          <br /> We developed both the functional and the aesthetic components\n          of websites with the help of MERN / LAMP Stac. <br /> It's good to\n          mention that I did a three months internship as a Web Developer at Sky\n          Akademie - Berlin.\n        </p>\n      </div>\n      <div className=\"languages\">\n        <h3>Languages</h3>\n        <p>\n          My mother language is Arabic. <br />\n          I'm fluent in English as well, good in German, and not bad in Russian\n          and Polish.\n        </p>\n      </div>\n      <div className=\"hobbies\">\n        <h3>Hobbies</h3>\n        <p>Basketball, Painting, Gaming, and Table Tennis.</p>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst Projects = () => {\n  return (\n    <div className=\"projects\">\n      <div className=\"row\">\n        <div className=\"column\">\n          <div className=\"card\">\n            <h3>Internship Project</h3>\n            <p>\n              Building a system for Sky AKademie Berlin for managing courses and\n              clients using LAMP stack.\n            </p>\n          </div>\n        </div>\n        <div className=\"column\">\n          <div className=\"card\">\n            <h3>Posts Manager App</h3>\n            <p>\n              React App for managing posts by users and it includes with\n              authentication\n            </p>\n            <a href=\"https://mohammadkharma.github.io/Posts_Manager_App/index.html\">\n              Go\n            </a>\n          </div>\n        </div>\n\n        <div className=\"column\">\n          <div className=\"card\">\n            <h3>Todo App</h3>\n            <p>Todo App using MERN stack</p>\n            <a href=\"https://mohammadkharma.github.io/MERN-Todo-App/\">Go</a>\n          </div>\n        </div>\n\n        <div className=\"column\">\n          <div className=\"card\">\n            <h3>Blogging App</h3>\n            <p>A simple React Blogging App</p>\n            <a href=\"https://mohammadkharma.github.io/Blogging_App/\">Go</a>\n          </div>\n        </div>\n\n        <div className=\"column\">\n          <div className=\"card\">\n            <h3>React Router</h3>\n            <p>Practicing React Router & Redux</p>\n            <a href=\"https://mohammadkharma.github.io/\">Go</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n","import React from \"react\";\n\nconst Contact = () => {\n  return (\n    <div className=\"contact\">\n      <form action=\"POST\" data-netlify=\"true\">\n        <div className=\"field\">\n          <input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Name\" />\n        </div>\n        <div className=\"field\">\n          <input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email\" />\n        </div>\n        <div className=\"field\">\n          <textarea\n            name=\"message\"\n            id=\"message\"\n            placeholder=\"Message\"\n          ></textarea>\n        </div>\n        <div data-netlifyrecaptcha=\"true\"></div>\n        <div className=\"field\">\n          <input className=\"submit\" type=\"submit\" value=\"Submit\" />\n        </div>\n      </form>\n\n      <footer>\n        <a\n          href=\"https://www.linkedin.com/in/mohammad-kharma-95606ba9/\"\n          className=\"fa fa-linkedin\"\n        ></a>\n        <a\n          href=\"https://www.xing.com/profile/Mohammad_Kharma2/cv\"\n          className=\"fa fa-xing\"\n        ></a>\n\n        <p>mohammad.kh.8688@gmail.com</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport About from \"./components/About\";\nimport Projects from \"./components/Projects\";\nimport Contact from \"./components/Contact\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename=\"/deploy-portfolio\">\n        <Navbar />\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/contact\" component={Contact} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}